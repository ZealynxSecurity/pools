/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LoanAgentFactory,
  LoanAgentFactoryInterface,
} from "../../LoanAgentFactory.sol/LoanAgentFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "activeMiners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_miner",
        type: "address",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "loanAgents",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_loanAgent",
        type: "address",
      },
    ],
    name: "revokeOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060045534801561001557600080fd5b5061001f33610024565b610074565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6114f7806100836000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638cc16b31116100665780638cc16b31146101125780638da5cb5b1461013b5780639ed933181461014c578063c0d786551461015f578063f2fde38b1461017257600080fd5b806306661abd1461009857806359853b40146100b4578063715018a6146100f557806383cfbd7f146100ff575b600080fd5b6100a160045481565b6040519081526020015b60405180910390f35b6100dd6100c2366004610542565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100ab565b6100fd610185565b005b6100fd61010d366004610542565b610199565b6100dd610120366004610542565b6003602052600090815260409020546001600160a01b031681565b6000546001600160a01b03166100dd565b6100dd61015a366004610542565b6102d7565b6100fd61016d366004610542565b6103d6565b6100fd610180366004610542565b610400565b61018d610476565b61019760006104d0565b565b336001600160a01b038216146101f65760405162461bcd60e51b815260206004820152601d60248201527f4c6f616e206167656e74206d757374207265766f6b6520697473656c6600000060448201526064015b60405180910390fd5b6001600160a01b038116156102d4576000819050600060036000836001600160a01b031663349dc3296040518163ffffffff1660e01b8152600401602060405180830381865afa15801561024e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102729190610566565b6001600160a01b0390811682526020808301939093526040918201600090812080549583166001600160a01b0319968716179055908516815260029092528120805490921690915560048054600192906102cd908490610599565b9091555050505b50565b6001600160a01b038181166000908152600360205260408120549091161561031857506001600160a01b039081166000908152600360205260409020541690565b60015460405160009184916001600160a01b039091169061033890610520565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801561036b573d6000803e3d6000fd5b506001600160a01b0380821660008181526002602090815260408083208054958a166001600160a01b031996871681179091558352600390915281208054909316909117909155600480549293506001929091906103ca9084906105b0565b90915550909392505050565b6103de610476565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b610408610476565b6001600160a01b03811661046d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101ed565b6102d4816104d0565b6000546001600160a01b031633146101975760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ed565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610ef9806105c983390190565b6001600160a01b03811681146102d457600080fd5b60006020828403121561055457600080fd5b813561055f8161052d565b9392505050565b60006020828403121561057857600080fd5b815161055f8161052d565b634e487b7160e01b600052601160045260246000fd5b6000828210156105ab576105ab610583565b500390565b600082198211156105c3576105c3610583565b50019056fe608060405234801561001057600080fd5b50604051610ef9380380610ef983398101604081905261002f9161007c565b600180546001600160a01b039384166001600160a01b031991821617909155600080549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b610e3b806100be6000396000f3fe6080604052600436106100745760003560e01c80635fd8c7101161004e5780635fd8c710146100f457806383cfbd7f146101175780638da5cb5b14610137578063d8aed1451461015757600080fd5b80630ecbcdab14610080578063349dc329146100a25780634e71e0c8146100df57600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b366004610d4f565b610177565b005b3480156100ae57600080fd5b506001546100c2906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100eb57600080fd5b506100a0610263565b34801561010057600080fd5b506101096103d4565b6040519081526020016100d6565b34801561012357600080fd5b506100a0610132366004610d89565b610449565b34801561014357600080fd5b506002546100c2906001600160a01b031681565b34801561016357600080fd5b506100a0610172366004610d4f565b6107f9565b6002546001600160a01b031633146101e25760405162461bcd60e51b8152602060048201526024808201527f4f6e6c79204c6f616e4167656e74206f776e65722063616e2063616c6c20626f60448201526372726f7760e01b60648201526084015b60405180910390fd5b6101eb81610bc8565b604051630967fa2960e31b8152600481018490523060248201526001600160a01b039190911690634b3fd148906044016020604051808303816000875af115801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e9190610dad565b505050565b600154604080516369f3331d60e01b8152905130926001600160a01b0316916369f3331d9160048083019260209291908290030181865afa1580156102ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d09190610dc6565b6001600160a01b0316146102e357600080fd5b600154604080516359c3f7c960e11b8152905133926001600160a01b03169163b387ef929160048083019260209291908290030181865afa15801561032c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103509190610dc6565b6001600160a01b03161461036357600080fd5b6001546040516385eac05f60e01b81523060048201526001600160a01b03909116906385eac05f90602401600060405180830381600087803b1580156103a857600080fd5b505af11580156103bc573d6000803e3d6000fd5b5050600280546001600160a01b031916331790555050565b60015460405163da76d5cd60e01b8152600060048201819052916001600160a01b03169063da76d5cd906024016020604051808303816000875af1158015610420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104449190610dad565b905090565b6002546001600160a01b031633146104b95760405162461bcd60e51b815260206004820152602d60248201527f4f6e6c79204c6f616e4167656e74206f776e65722063616e2063616c6c20726560448201526c0766f6b654f776e65727368697609c1b60648201526084016101d9565b600154604080516359c3f7c960e11b8152905130926001600160a01b03169163b387ef929160048083019260209291908290030181865afa158015610502573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105269190610dc6565b6001600160a01b03161461057c5760405162461bcd60e51b815260206004820152601c60248201527f4c6f616e4167656e7420646f6573206e6f74206f776e206d696e65720000000060448201526064016101d9565b60008054906101000a90046001600160a01b03166001600160a01b031663c59d48476040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f19190610dc6565b60405163ee4e19a160e01b81523060048201526001600160a01b03919091169063ee4e19a1906024016020604051808303816000875af1158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d9190610de3565b156106c75760405162461bcd60e51b815260206004820152603460248201527f43616e6e6f74207265766f6b65206d696e6572206f776e6572736869702077696044820152737468206f75747374616e64696e67206c6f616e7360601b60648201526084016101d9565b6001546040516385eac05f60e01b81526001600160a01b038381166004830152909116906385eac05f90602401600060405180830381600087803b15801561070e57600080fd5b505af1158015610722573d6000803e3d6000fd5b5050505060008054906101000a90046001600160a01b03166001600160a01b031663a07d6d236040518163ffffffff1660e01b8152600401602060405180830381865afa158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b9190610dc6565b6040516383cfbd7f60e01b81523060048201526001600160a01b0391909116906383cfbd7f90602401600060405180830381600087803b1580156107de57600080fd5b505af11580156107f2573d6000803e3d6000fd5b5050505050565b6002546001600160a01b0316331461085f5760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79204c6f616e4167656e74206f776e65722063616e2063616c6c20726560448201526270617960e81b60648201526084016101d9565b8161086982610bc8565b6001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ca9190610dc6565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610910573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109349190610dad565b10158015610940575060015b6109985760405162461bcd60e51b8152602060048201526024808201527f496e76616c696420616d6f756e742070617373656420746f20706179646f776e6044820152631119589d60e21b60648201526084016101d9565b81600003610a77576109a981610bc8565b6001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0a9190610dc6565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a749190610dad565b91505b6000610a8282610bc8565b9050806001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ac2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae69190610dc6565b60405163095ea7b360e01b81526001600160a01b03838116600483015260248201869052919091169063095ea7b3906044016020604051808303816000875af1158015610b37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5b9190610de3565b5060405163c883b2e560e01b815260048101849052306024820181905260448201526001600160a01b0382169063c883b2e590606401600060405180830381600087803b158015610bab57600080fd5b505af1158015610bbf573d6000803e3d6000fd5b50505050505050565b6000805460408051636bd969b360e01b8152905183926001600160a01b031691636bd969b39160048083019260209291908290030181865afa158015610c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c369190610dc6565b9050806001600160a01b031663efde4e646040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9a9190610dad565b831115610cdb5760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081c1bdbdb081251608a1b60448201526064016101d9565b6040516341d1de9760e01b8152600481018490526000906001600160a01b038316906341d1de9790602401602060405180830381865afa158015610d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d479190610dc6565b949350505050565b60008060408385031215610d6257600080fd5b50508035926020909101359150565b6001600160a01b0381168114610d8657600080fd5b50565b600060208284031215610d9b57600080fd5b8135610da681610d71565b9392505050565b600060208284031215610dbf57600080fd5b5051919050565b600060208284031215610dd857600080fd5b8151610da681610d71565b600060208284031215610df557600080fd5b81518015158114610da657600080fdfea2646970667358221220b6cc28943ab2e65ee4fc89a722e6464e90002875d5673d125045d8310917efca64736f6c634300080f0033a264697066735822122029a1cc34d9545668a5b868533f851b2f2d15f99aa3204470a3f1234548ccbd0e64736f6c634300080f0033";

type LoanAgentFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LoanAgentFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LoanAgentFactory__factory extends ContractFactory {
  constructor(...args: LoanAgentFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LoanAgentFactory> {
    return super.deploy(overrides || {}) as Promise<LoanAgentFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LoanAgentFactory {
    return super.attach(address) as LoanAgentFactory;
  }
  override connect(signer: Signer): LoanAgentFactory__factory {
    return super.connect(signer) as LoanAgentFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LoanAgentFactoryInterface {
    return new utils.Interface(_abi) as LoanAgentFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LoanAgentFactory {
    return new Contract(address, _abi, signerOrProvider) as LoanAgentFactory;
  }
}
