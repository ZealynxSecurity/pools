/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Router, RouterInterface } from "../Router";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_loanAgentFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_creditScorer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stats",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getCreditScorer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLoanAgentFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "getRoute",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStats",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRoute",
        type: "address",
      },
    ],
    name: "pushRoute",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "routes",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161060638038061060683398101604081905261002f91610167565b61003833610081565b604080516080810182526001600160a01b03808716825285811660208301528481169282019290925290821660608201526100779060019060046100d1565b50505050506101bb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610126579160200282015b8281111561012657825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906100f1565b50610132929150610136565b5090565b5b808211156101325760008155600101610137565b80516001600160a01b038116811461016257600080fd5b919050565b6000806000806080858703121561017d57600080fd5b6101868561014b565b93506101946020860161014b565b92506101a26040860161014b565b91506101b06060860161014b565b905092959194509250565b61043c806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063726f16d811610066578063726f16d8146101125780638da5cb5b14610125578063a07d6d2314610136578063c59d48471461013e578063f2fde38b1461014657600080fd5b80631e382d5c146100a35780633ca53a18146100d35780635453fdb3146100db5780636bd969b314610100578063715018a614610108575b600080fd5b6100b66100b1366004610384565b610159565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b661018c565b6100ee6100e93660046103ae565b61019d565b60405160ff90911681526020016100ca565b6100b66101fa565b610110610206565b005b6100b66101203660046103d7565b61021a565b6000546001600160a01b03166100b6565b6100b6610244565b6100b6610250565b6101106101543660046103ae565b61025c565b600060018260ff1681548110610171576101716103f0565b6000918252602090912001546001600160a01b031692915050565b60006101986002610159565b905090565b60006101a76102da565b506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6810180546001600160a01b0384166001600160a01b0319909116179055919050565b60006101986001610159565b61020e6102da565b6102186000610334565b565b6001818154811061022a57600080fd5b6000918252602090912001546001600160a01b0316905081565b60006101986000610159565b60006101986003610159565b6102646102da565b6001600160a01b0381166102ce5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6102d781610334565b50565b6000546001600160a01b031633146102185760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561039657600080fd5b813560ff811681146103a757600080fd5b9392505050565b6000602082840312156103c057600080fd5b81356001600160a01b03811681146103a757600080fd5b6000602082840312156103e957600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220b081a7358d975021ef17c0a7f005b03d85f97b49564408a3564b4778fdd8495d64736f6c634300080f0033";

type RouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Router__factory extends ContractFactory {
  constructor(...args: RouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _loanAgentFactory: PromiseOrValue<string>,
    _poolFactory: PromiseOrValue<string>,
    _creditScorer: PromiseOrValue<string>,
    _stats: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Router> {
    return super.deploy(
      _loanAgentFactory,
      _poolFactory,
      _creditScorer,
      _stats,
      overrides || {}
    ) as Promise<Router>;
  }
  override getDeployTransaction(
    _loanAgentFactory: PromiseOrValue<string>,
    _poolFactory: PromiseOrValue<string>,
    _creditScorer: PromiseOrValue<string>,
    _stats: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _loanAgentFactory,
      _poolFactory,
      _creditScorer,
      _stats,
      overrides || {}
    );
  }
  override attach(address: string): Router {
    return super.attach(address) as Router;
  }
  override connect(signer: Signer): Router__factory {
    return super.connect(signer) as Router__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterInterface {
    return new utils.Interface(_abi) as RouterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Router {
    return new Contract(address, _abi, signerOrProvider) as Router;
  }
}
