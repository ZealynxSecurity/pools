/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LoanAgentFactoryDeploy,
  LoanAgentFactoryDeployInterface,
} from "../../Demo.s.sol/LoanAgentFactoryDeploy";

const _abi = [
  {
    inputs: [],
    name: "IS_SCRIPT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "run",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vm",
    outputs: [
      {
        internalType: "contract Vm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff1916600117905534801561001d57600080fd5b506101a58061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633a76846314610046578063c04062261461007e578063f8ccbf4714610088575b600080fd5b610061737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100866100a5565b005b6000546100959060ff1681565b6040519015158152602001610075565b60408051637fb5297f60e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d91637fb5297f91600480830192600092919082900301818387803b1580156100f157600080fd5b505af1158015610105573d6000803e3d6000fd5b505060408051633b756e9b60e11b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d93506376eadd369250600480830192600092919082900301818387803b15801561015557600080fd5b505af1158015610169573d6000803e3d6000fd5b5050505056fea264697066735822122071912c0c07bd6502238eee9d844c8f8d9eee0b9091fa4b2c50292b4b20b936dc64736f6c634300080f0033";

type LoanAgentFactoryDeployConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LoanAgentFactoryDeployConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LoanAgentFactoryDeploy__factory extends ContractFactory {
  constructor(...args: LoanAgentFactoryDeployConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LoanAgentFactoryDeploy> {
    return super.deploy(overrides || {}) as Promise<LoanAgentFactoryDeploy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LoanAgentFactoryDeploy {
    return super.attach(address) as LoanAgentFactoryDeploy;
  }
  override connect(signer: Signer): LoanAgentFactoryDeploy__factory {
    return super.connect(signer) as LoanAgentFactoryDeploy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LoanAgentFactoryDeployInterface {
    return new utils.Interface(_abi) as LoanAgentFactoryDeployInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LoanAgentFactoryDeploy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LoanAgentFactoryDeploy;
  }
}
