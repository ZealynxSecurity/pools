/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Stats, StatsInterface } from "../Stats";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "loanAgent",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "poolID",
        type: "uint256",
      },
    ],
    name: "hasPenalties",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "loanAgent",
        type: "address",
      },
    ],
    name: "hasPenalties",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "loanAgent",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "poolID",
        type: "uint256",
      },
    ],
    name: "isDebtor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "loanAgent",
        type: "address",
      },
    ],
    name: "isDebtor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "loanAgent",
        type: "address",
      },
    ],
    name: "isLoanAgent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a118061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063d805f6bf11610066578063d805f6bf146100f8578063db7f72da1461010b578063dfe10aa11461011e578063ee4e19a114610131578063f2fde38b1461014457600080fd5b8063630b858f14610098578063715018a6146100c05780638da5cb5b146100ca578063c0d78655146100e5575b600080fd5b6100ab6100a636600461090a565b610157565b60405190151581526020015b60405180910390f35b6100c861025d565b005b6000546040516001600160a01b0390911681526020016100b7565b6100c86100f3366004610936565b610271565b6100ab610106366004610936565b61029b565b6100ab610119366004610936565b610323565b6100ab61012c36600461090a565b6104a2565b6100ab61013f366004610936565b61059b565b6100c8610152366004610936565b610710565b60008061016261078e565b6040516341d1de9760e01b8152600481018590529091506000906001600160a01b038316906341d1de9790602401602060405180830381865afa1580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d1919061095a565b604051639aae66f960e01b81526001600160a01b0387811660048301529190911690639aae66f9906024016040805180830381865afa158015610218573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023c9190610977565b915050801561025057600192505050610257565b6000925050505b92915050565b610265610801565b61026f600061085b565b565b610279610801565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000806102a66108ab565b60405163016614ed60e61b81526001600160a01b03858116600483015291909116906359853b4090602401602060405180830381865afa1580156102ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610312919061095a565b6001600160a01b0316141592915050565b60008061032e61078e565b905060005b816001600160a01b031663efde4e646040518163ffffffff1660e01b8152600401602060405180830381865afa158015610371573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610395919061099b565b811015610498576040516341d1de9760e01b8152600481018290526000906001600160a01b038416906341d1de9790602401602060405180830381865afa1580156103e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610408919061095a565b604051639aae66f960e01b81526001600160a01b0387811660048301529190911690639aae66f9906024016040805180830381865afa15801561044f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104739190610977565b915050801561048757506001949350505050565b50610491816109b4565b9050610333565b5060009392505050565b6000806104ad61078e565b6040516341d1de9760e01b8152600481018590529091506000906001600160a01b038316906341d1de9790602401602060405180830381865afa1580156104f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051c919061095a565b604051639aae66f960e01b81526001600160a01b0387811660048301529190911690639aae66f9906024016040805180830381865afa158015610563573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105879190610977565b509050801561025057600192505050610257565b6000806105a661078e565b905060005b816001600160a01b031663efde4e646040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060d919061099b565b811015610498576040516341d1de9760e01b8152600481018290526000906001600160a01b038416906341d1de9790602401602060405180830381865afa15801561065c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610680919061095a565b604051639aae66f960e01b81526001600160a01b0387811660048301529190911690639aae66f9906024016040805180830381865afa1580156106c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106eb9190610977565b50905080156106ff57506001949350505050565b50610709816109b4565b90506105ab565b610718610801565b6001600160a01b0381166107825760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61078b8161085b565b50565b60015460408051636bd969b360e01b815290516000926001600160a01b031691636bd969b39160048083019260209291908290030181865afa1580156107d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fc919061095a565b905090565b6000546001600160a01b0316331461026f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610779565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546040805163a07d6d2360e01b815290516000926001600160a01b03169163a07d6d239160048083019260209291908290030181865afa1580156107d8573d6000803e3d6000fd5b6001600160a01b038116811461078b57600080fd5b6000806040838503121561091d57600080fd5b8235610928816108f5565b946020939093013593505050565b60006020828403121561094857600080fd5b8135610953816108f5565b9392505050565b60006020828403121561096c57600080fd5b8151610953816108f5565b6000806040838503121561098a57600080fd5b505080516020909101519092909150565b6000602082840312156109ad57600080fd5b5051919050565b6000600182016109d457634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220d8cbddaad68cccecad41f72af2420930cf29719aa506d9e6aea4642dfcf1358d64736f6c634300080f0033";

type StatsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StatsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Stats__factory extends ContractFactory {
  constructor(...args: StatsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Stats> {
    return super.deploy(overrides || {}) as Promise<Stats>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Stats {
    return super.attach(address) as Stats;
  }
  override connect(signer: Signer): Stats__factory {
    return super.connect(signer) as Stats__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StatsInterface {
    return new utils.Interface(_abi) as StatsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Stats {
    return new Contract(address, _abi, signerOrProvider) as Stats;
  }
}
